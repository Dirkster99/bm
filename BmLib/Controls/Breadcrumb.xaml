<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"

    xmlns:ctrls="clr-namespace:BmLib.Controls"
    xmlns:uc="clr-namespace:BmLib.Controls.Breadcrumbs"
                    
    xmlns:bc="clr-namespace:BmLib.Controls"
    xmlns:imgSize="clr-namespace:BmLib.Converters"
    xmlns:conv="clr-namespace:BmLib.Converters"
    xmlns:reskeys="clr-namespace:BmLib.Themes"
    xmlns:behav="clr-namespace:BmLib.Behaviors"
   >
    <!--
    xmlns:sbox="clr-namespace:BmLib.Controls.SuggestBox"
    -->
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/BmLib;component/Controls/Breadcrumbs/BreadcrumbTreeItem.xaml" />
        <ResourceDictionary Source="/BmLib;component/Controls/Switch.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="{x:Type ctrls:Breadcrumb}">
        <!-- MinWidth assures nice Breadcrumb display when UI gets too small
             because Window may be resized to a small portion of its normal size -->
        <Setter Property="MinWidth" Value="100" />
        <Setter Property="BorderBrush" Value="Gray"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Margin" Value="0" />
        <Setter Property="MinHeight" Value="24" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrls:Breadcrumb}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                            MinHeight="{TemplateBinding MinHeight}"
                            >
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            
                            <!-- Press Bar and Switch Control with Breadcrumb Tree and TextBox input -->
                            <Grid HorizontalAlignment="Stretch"
                                  VerticalAlignment="Stretch"
                                  Margin="0"
                            >
                                <Grid.Resources>
                                    <conv:BoolToVisibilityCollapsedConverter x:Key="btv" />
                                    <conv:FlipBoolConverter x:Key="fb" />
                                </Grid.Resources>

                                <Grid.ColumnDefinitions>
                                    <!-- This needs to be * because OverflowableStackpanel inside
                                     Switch inside BreadCrumbTree cannot function when this is set to Auto
                
                                     -> Defect: The items in the BreadcrumbTree will no longer overflow
                                                (disappear when space is limited).
                                -->
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <!-- Show a progress-bar to indicate long running processing -->
                                <ProgressBar IsIndeterminate="{Binding Progressing.IsIndeterminate, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"
                                             Value="{Binding Progressing.ProgressValue, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"
                                             Minimum="{Binding Progressing.MinimumProgressValue, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"
                                             Maximum="{Binding Progressing.MaximumProgressValue, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"
                                             Visibility="{Binding Progressing.IsProgressbarVisible, Mode=OneWay,UpdateSourceTrigger=PropertyChanged, Converter={StaticResource btv}}"
                                               
                                             Opacity="0.5"
                                             Background="Transparent"
                                             Foreground="{DynamicResource {x:Static SystemColors.HotTrackBrushKey}}"
                                             BorderBrush="Transparent" BorderThickness="0"/>

                                <bc:Switch x:Name="PART_Switch"
                                           Template="{StaticResource BreadcrumbSwitchTemplate}"                   
                                           IsSwitchOn="{Binding EnableBreadcrumb, Mode=TwoWay}"
                                           VerticalAlignment="Center" VerticalContentAlignment="Center"
                                           HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch"
                                           Margin="0"
                                     >
                                    <bc:Switch.Header>
                                        <Image DataContext="{Binding SelectedViewModel}">
                                            <Image.Source>
                                                <MultiBinding Converter="{x:Static conv:AssociatedIconConverter.Default}">
                                                    <MultiBinding.ConverterParameter>
                                                        <imgSize:IconSize >Small</imgSize:IconSize>
                                                    </MultiBinding.ConverterParameter>
                                                    <Binding Path="ItemPath" />
                                                    <Binding Path="ItemName" />
                                                    <Binding Path="IconResourceId" />
                                                </MultiBinding>
                                            </Image.Source>
                                        </Image>
                                    </bc:Switch.Header>
                                    <bc:Switch.ContentOn>
                                        <!-- Show TreeView with RootDropDown Items -->
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto" MinWidth="{TemplateBinding OverflowGap}" />
                                            </Grid.ColumnDefinitions>

                                            <!-- Displays a root toggle button with a (root/overflow) dropdown list
                                                 at the left most button in the control -->
                                            <ctrls:DropDownList Grid.Column="0"
                                                                x:Name="PART_RootDropDownList"
                                                                VerticalAlignment="Stretch" 
                                                                ItemsSource="{TemplateBinding RootDropDownItemsSource}"
                                                                SelectedValuePath="{TemplateBinding RootDropDownSelectedValuePath}"
                                                                SelectedValue="{Binding SelectedValue,Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"                             
                                                                ItemTemplate="{TemplateBinding DropDownListItemDataTemplate}"
                                                                ItemContainerStyle="{TemplateBinding RootDropDownListItemContainerStyle}"
                                                                Header="{TemplateBinding RootDropDownListHeader}"
                                                                HorizontalAlignment="Left"
                                                                behav:SelectionChangedCommand.ChangedCommand="{TemplateBinding RootDropDownSelectionChangedCommand}"
                                                                BorderThickness="0"
                                                                Margin="0"
                                                            />


                                            <!-- The BreadcrumbTree control displays the complete path and each drop down list -->
                                            <uc:BreadcrumbTree Grid.Column="1"
                                                               DropDownListItemDataTemplate="{TemplateBinding DropDownListItemDataTemplate}"
                                                               x:Name="PART_BreadcrumbTree"
                                                               Margin="0"
                                                               ItemsSource="{TemplateBinding TreeItemsSource}"
                                                               ItemTemplate="{TemplateBinding TreeItemTemplate}"
                                                               ItemContainerStyle="{TemplateBinding TreeItemContainerStyle}"
                                                               />

                                            <!-- Grid.Column="2" Is OverflowGap which is necessary to reach Switch
                                                 through click on right-most background of BreadcrumbTree -->
                                        </Grid>
                                    </bc:Switch.ContentOn>
                                    <!-- bc:Switch.ContentOff>
                                      <sbox:SuggestBox x:Name="PART_SuggestBox" BorderThickness="0" Text="{Binding SuggestedPath, UpdateSourceTrigger=Explicit}"
                                                       DisplayMemberPath="FullPath" ValuePath="FullPath" 
                                                       IsEnabled="{Binding EnableBreadcrumb, Mode=OneWay, Converter={StaticResource fb}}"
                                                       SuggestSources="{Binding SuggestSources}" HierarchyHelper="{x:Null}">
                                      </sbox:SuggestBox>
                                    </bc:Switch.ContentOff -->
                                </bc:Switch>
                            </Grid>

                            <!-- Cancel/Refesh Buttons -->
                            <Grid Grid.Column="1">
                                <Grid.Resources>
                                    <conv:BoolToVisibilityPropConverter x:Key="BoolToVisibilityConverter"/>
                                    <conv:BoolToVisibilityPropConverter x:Key="BoolToVisibilityConverterNeg" TrueValue="Collapsed" FalseValue="Visible" />
                                </Grid.Resources>

                                <!-- Button Overlay for Refresh and Cancel Button (only one should be visible at any time) -->
                                <Button Name="RefreshButton"
                                        Style="{DynamicResource {x:Static reskeys:ResourceKeys.RefreshCancel_ButtonStyle}}"
                                        Visibility="{Binding TaskQueue.IsProcessCancelable,Converter={StaticResource BoolToVisibilityConverterNeg},UpdateSourceTrigger=PropertyChanged,Mode=OneWay}"
                                        ToolTip="Refresh"
                                        >
                                    <Button.Background>
                                        <ImageBrush ImageSource="{DynamicResource {x:Static reskeys:ResourceKeys.ICON_Refresh}}"/>
                                    </Button.Background>
                                </Button>

                                <Button Name="CancelButton"
                                        Style="{DynamicResource {x:Static reskeys:ResourceKeys.RefreshCancel_ButtonStyle}}"
                                        Command="{Binding TaskQueue.CancelProcess,UpdateSourceTrigger=PropertyChanged,Mode=OneWay}"
                                        IsEnabled="{Binding TaskQueue.IsProcessCancelable,UpdateSourceTrigger=PropertyChanged,Mode=OneWay}"
                                        Visibility="{Binding TaskQueue.IsProcessCancelable,Converter={StaticResource BoolToVisibilityConverter},UpdateSourceTrigger=PropertyChanged,Mode=OneWay}"
                                        ToolTip="Cancel"
                                        >
                                    <Button.Background>
                                        <ImageBrush ImageSource="{DynamicResource {x:Static reskeys:ResourceKeys.ICON_Close}}"/>
                                    </Button.Background>
                                </Button>
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ControlAccentBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>