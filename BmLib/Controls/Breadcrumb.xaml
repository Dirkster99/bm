<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"

    xmlns:ctrls="clr-namespace:BmLib.Controls"
    xmlns:uc="clr-namespace:BmLib.Controls.Breadcrumbs"
                    
    xmlns:bc="clr-namespace:BmLib.Controls"
    xmlns:conv="clr-namespace:BmLib.Converters"
    xmlns:reskeys="clr-namespace:BmLib.Themes"
   >
    <!--
    xmlns:sbox="clr-namespace:BmLib.Controls.SuggestBox"
    -->
    <ResourceDictionary.MergedDictionaries>
        <!-- ResourceDictionary Source="/BmLib;component/Themes/Default/Geometry.xaml" / -->
        <ResourceDictionary Source="/BmLib;component/Controls/Breadcrumbs/BreadcrumbTreeItem.xaml" />
        <!-- ResourceDictionary Source="/BmLib;component/Themes/Default/Brushes.xaml" / -->
        <ResourceDictionary Source="/BmLib;component/Controls/Switch.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="{x:Type ctrls:Breadcrumb}">
        <!-- MinWidth assures nice Breadcrumb display when UI gets too small
             because Window may be resized to a small portion of its normal size -->
        <Setter Property="MinWidth" Value="100" />
        <Setter Property="BorderBrush" Value="Gray"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Margin" Value="0" />
        <Setter Property="MinHeight" Value="24" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrls:Breadcrumb}">
                    <ControlTemplate.Resources>
                        <conv:FlipBoolToVisibilityCollapsedConverter x:Key="fbtvc" />
                        <conv:BoolToVisibilityCollapsedConverter x:Key="btvc" />
                        <conv:BoolToOneOfTwoBindingsConverter x:Key="BoolToOneOfTwoBindingsConverter"
                                                              TrueSource="{DynamicResource {x:Static reskeys:ResourceKeys.ExpanderArrow}}"
                                                              FalseSource="{DynamicResource {x:Static reskeys:ResourceKeys.NormalArrow}}"
                                                              />
                    </ControlTemplate.Resources>
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                            MinHeight="{TemplateBinding MinHeight}"
                            >
                        <Grid HorizontalAlignment="Stretch"
                              VerticalAlignment="Stretch"
                              Margin="0"
                              >
                            <Grid.Resources>
                                <conv:BoolToVisibilityCollapsedConverter x:Key="btv" />
                                <conv:FlipBoolConverter x:Key="fb" />
                            </Grid.Resources>

                            <Grid.ColumnDefinitions>
                                <!-- This needs to be * because OverflowableStackpanel inside
                                     Switch inside BreadCrumbTree cannot function when this is set to Auto
                
                                     -> Defect: The items in the BreadcrumbTree will no longer overflow
                                                (dissappear when space is limited).
                                -->
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" MinWidth="{TemplateBinding OverflowGap}" />

                            </Grid.ColumnDefinitions>

                            <!-- Show a progressbar to indicate long running processings -->
                            <ProgressBar IsIndeterminate="{Binding  Progressing.IsIndeterminate, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"
                                         Value="{Binding Progressing.ProgressValue, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"
                                         Minimum="{Binding Progressing.MinimumProgressValue, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"
                                         Maximum="{Binding Progressing.MaximumProgressValue, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"
                                         Visibility="{Binding Progressing.IsProgressbarVisible, Mode=OneWay,UpdateSourceTrigger=PropertyChanged, Converter={StaticResource btv}}"
                                               
                                         Opacity="0.5"
                                         Background="Transparent"
                                         Foreground="{DynamicResource {x:Static SystemColors.HotTrackBrushKey}}"
                                         BorderBrush="Transparent" BorderThickness="0"/>

                            <bc:Switch x:Name="PART_Switch"
                                       Template="{StaticResource BreadcrumbSwitchTemplate}"                   
                                       IsSwitchOn="{Binding EnableBreadcrumb, Mode=TwoWay}"
                                       VerticalAlignment="Center" VerticalContentAlignment="Center"
                                       Margin="1,0"
                                     >
                                <bc:Switch.Header>
                                    <Image Source="{Binding BreadcrumbSubTree.Selection.SelectedViewModel.Icon}" />
                                </bc:Switch.Header>
                                <bc:Switch.ContentOn>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>

                                        <!-- Displays a root toggle button with a (root/overflow) dropdown list
                                             at the left most button in the control -->
                                        <ctrls:DropDownList Grid.Column="0"
                                                            x:Name="PART_DropDownList"
                                                            VerticalAlignment="Stretch" 
                                                            ItemsSource="{Binding BreadcrumbSubTree.Selection.OverflowedAndRootItems}"
                                                            SelectedValuePath="Selection.Value"
                                                            SelectedValue="{Binding BreadcrumbSubTree.Selection.SelectedValue}"                               
                                                            ItemTemplate="{StaticResource DropDownListItemDataTemplate}">
                                            <ctrls:DropDownList.Header>
                                                <Path Stroke="{DynamicResource {x:Static reskeys:ResourceKeys.ControlNormalForegroundBrushKey}}"
                                                      StrokeThickness="1.2"
                                                      HorizontalAlignment="Center"
                                                      VerticalAlignment="Center"
                                                      IsHitTestVisible="True"
                                                      DataContext="{Binding BreadcrumbSubTree}"
                                                      Data="{Binding IsOverflown,RelativeSource={RelativeSource AncestorType={x:Type bc:Breadcrumb}}, Converter={StaticResource BoolToOneOfTwoBindingsConverter},Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"
                                                />
                                            </ctrls:DropDownList.Header>
                                            <!--ItemContainerStyle already assigned in DropDownList.xaml -->
                                            <ctrls:DropDownList.ItemContainerStyle>
                                                <Style TargetType="{x:Type ComboBoxItem}" BasedOn="{StaticResource {x:Type ComboBoxItem}}">
                                                    <Setter Property="Visibility" Value="{Binding Selection.IsOverflowedOrRoot, Mode=OneWay, Converter={StaticResource btvc}}"  />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding}" Value="{x:Null}">
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                                                                        <!-- BugFix: Show Seperator only if items are overflown -->
                                                                        <Separator HorizontalAlignment="Stretch"
                                                                                   IsEnabled="False"
                                                                                   Visibility="{Binding IsOverflown,Converter={StaticResource btv}, RelativeSource={RelativeSource AncestorType={x:Type bc:Breadcrumb}}}"
                                                                                   />
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </ctrls:DropDownList.ItemContainerStyle>
                                        </ctrls:DropDownList>

                                        <!-- The BreadcrumbTree control displays the complete path and each drop down list -->
                                        <uc:BreadcrumbTree Grid.Column="1"
                                                           ItemsSource="{Binding BreadcrumbSubTree.Entries.All}"
                                                           MenuItemTemplate="{StaticResource DropDownListItemDataTemplate}"
                                                           x:Name="PART_BreadcrumbTree"
                                                           Margin="0"
                                                           >
                                            <uc:BreadcrumbTree.ItemContainerStyle>
                                                <Style TargetType="{x:Type uc:BreadcrumbTreeItem}" BasedOn="{StaticResource {x:Type uc:BreadcrumbTreeItem}}">
                                                    <Setter Property="ValuePath" Value="Selection.Value" />
                                                    <Setter Property="IsExpanded" Value="{Binding Entries.IsExpanded, Mode=TwoWay}"  />
                                                    <Setter Property="IsCurrentSelected" Value="{Binding Selection.IsSelected, Mode=TwoWay}"  />
                                                    <Setter Property="SelectedChild" Value="{Binding Selection.SelectedChildUI, Mode=TwoWay}"  />
                                                    <Setter Property="IsChildSelected" Value="{Binding Selection.IsChildSelected, Mode=OneWay}"  />

                                                    <!--Updated by BreadcrumbTreeItem and it's OverflowableStackPanel-->
                                                    <Setter Property="IsOverflowed" Value="{Binding Selection.IsOverflowed, Mode=OneWayToSource}"  />
                                                </Style>
                                            </uc:BreadcrumbTree.ItemContainerStyle>

                                            <uc:BreadcrumbTree.ItemTemplate>
                                                <!-- Display of path elements within the HORIZONTAL Breadcrumb tree control
                                               eg "C:\" |> "Program Files" "|>"  -->
                                                <HierarchicalDataTemplate ItemsSource="{Binding Entries.All}">
                                                    <TextBlock Text="{Binding Header}"
                                                                VerticalAlignment="Center"
                                                                Background="Transparent"
                                                                Foreground="{DynamicResource {x:Static reskeys:ResourceKeys.ControlTextBrushKey}}"
                                                                />
                                                </HierarchicalDataTemplate>
                                            </uc:BreadcrumbTree.ItemTemplate>

                                            <!--<uc:BreadcrumbTree.LayoutTransform>
                                              <ScaleTransform ScaleX="2" ScaleY="2" />
                                            </uc:BreadcrumbTree.LayoutTransform>-->
                                        </uc:BreadcrumbTree>
                                    </Grid>
                                </bc:Switch.ContentOn>
                                <!-- bc:Switch.ContentOff>
                                      <sbox:SuggestBox x:Name="PART_SuggestBox" BorderThickness="0" Text="{Binding SuggestedPath, UpdateSourceTrigger=Explicit}"
                                                       DisplayMemberPath="FullPath" ValuePath="FullPath" 
                                                       IsEnabled="{Binding EnableBreadcrumb, Mode=OneWay, Converter={StaticResource fb}}"
                                                       SuggestSources="{Binding SuggestSources}" HierarchyHelper="{x:Null}">
                                      </sbox:SuggestBox>
                                    </bc:Switch.ContentOff -->
                                <!--<bc:Switch.LayoutTransform>
                                        <ScaleTransform ScaleX="2" ScaleY="2" />
                                    </bc:Switch.LayoutTransform>-->
                            </bc:Switch>
                        </Grid>

                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ControlAccentBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>