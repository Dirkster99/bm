<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"

    xmlns:ctrls="clr-namespace:BmLib.Controls"
    xmlns:reskeys="clr-namespace:BmLib.Themes"
    >

    <Style x:Key="{x:Type ctrls:DropDownList}" TargetType="{x:Type ctrls:DropDownList}">
        <Setter Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ControlInputBackgroundKey}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ControlTextBrushKey}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ControlInputBorderKey}}" />
        <Setter Property="HeaderButtonTemplate" Value="{DynamicResource {x:Static reskeys:ResourceKeys.BaseToggleButton}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="MaxDropDownHeight" Value="800"/>
        <!--Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrls:DropDownList}">
                    <ctrls:DropDown
                        IsDropDownOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}" 
                                      
                        HorizontalOffset="{TemplateBinding HorizontalOffset}"
                        VerticalOffset="{TemplateBinding VerticalOffset}"
                        Placement="{TemplateBinding Placement}" 
                        PlacementTarget="{TemplateBinding PlacementTarget}"

                        Header="{Binding Header,RelativeSource={RelativeSource TemplatedParent}}"
                        HeaderButtonTemplate="{Binding HeaderButtonTemplate,RelativeSource={RelativeSource TemplatedParent}}"
                    >
                        <!-- https://stackoverflow.com/questions/3835472/wpf-what-can-cause-a-combobox-to-not-virtualize -->
                        <Grid MaxHeight="{TemplateBinding MaxDropDownHeight}"
                              MinWidth="{TemplateBinding ActualWidth}"
                              x:Name="DropDown" SnapsToDevicePixels="True">
                            <Border x:Name="DropDownBorder" Background="{DynamicResource ShadeBrush}"
                                    BorderBrush="{DynamicResource SolidBorderBrush}"
                                    BorderThickness="1"/>
                            <ScrollViewer Margin="0"
                                          SnapsToDevicePixels="True"
                                          HorizontalScrollBarVisibility="Auto"
                                          VerticalScrollBarVisibility="Auto"
                                          CanContentScroll="True">

                                <VirtualizingStackPanel IsItemsHost="True"
                                                        KeyboardNavigation.DirectionalNavigation="Contained"/>
                                
                            </ScrollViewer>
                        </Grid>
                    </ctrls:DropDown>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource {x:Type ListBoxItem}}" >
                    < Style.Triggers>
                        <DataTrigger Binding="{Binding}" Value="{x:Null}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                                        <Button Content="Cancel" Command="{Binding CancelCommand}"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </-->
    </Style>

</ResourceDictionary>