<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:reskeys="clr-namespace:BmLib.Themes"
                    >

    <!-- Defines the button style of the Refresh/Cancel button on the far right side of the Breadcrumb control. -->
    <Style TargetType="Button"
           BasedOn="{StaticResource {x:Type Button}}"
           x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type reskeys:ResourceKeys},
           ResourceId=RefreshCancel_ButtonStyle}">
        <!-- Bind the image to background to scale image to available space -->
        <!--Setter Property="Background">
                    <Setter.Value>
                        <ImageBrush ImageSource="{DynamicResource {x:Static reskeys:ResourceKeys.ICON_Refresh}}"/>
                    </Setter.Value>
                </Setter -->
        <!-- Button Size should be squared (same height and width) -->
        <Setter Property="Width" Value="{Binding ElementName=RefreshButton,Path=ActualHeight}"/>
        <Setter Property="Margin" Value="3"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                  Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  RecognizesAccessKey="True"/>
                    </Border>
                    <!-- ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    - If we don't tell the background to change on hover, it will remain the same -
                                </Trigger>
                            </ControlTemplate.Triggers -->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>