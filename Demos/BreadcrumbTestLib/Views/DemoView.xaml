<UserControl x:Class="BreadcrumbTestLib.Views.DemoView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             
        xmlns:themes="clr-namespace:BmLib.Themes;assembly=BmLib"
        xmlns:reskeys="clr-namespace:BmLib.Themes;assembly=BmLib"

        xmlns:ctrls="clr-namespace:BmLib.Controls;assembly=BmLib"
        xmlns:treectrls="clr-namespace:BmLib.Controls.Breadcrumbs;assembly=BmLib"

        xmlns:imgSize="clr-namespace:BmLib.Converters;assembly=BmLib"
        xmlns:convLib="clr-namespace:BmLib.Converters;assembly=BmLib"

        mc:Ignorable="d" 
        d:DesignHeight="450" d:DesignWidth="800">
    <Grid Margin="12">
        <Grid.Resources>
            <ResourceDictionary>
                <convLib:BoolToVisibilityPropConverter TrueValue="Visible" FalseValue="Collapsed" x:Key="BoolToVisibilityConverter" />
                <convLib:BoolToVisibilityCollapsedConverter x:Key="btv" />
                <convLib:BoolToVisibilityCollapsedConverter x:Key="btvc" />
                
                <!-- Binds to a boolean datasource and returns one of two possible bound values -->
                <convLib:BoolToOneOfTwoBindingsConverter x:Key="BoolToOneOfTwoBindingsConverter"
                                                         TrueSource="{DynamicResource {x:Static reskeys:ResourceKeys.ExpanderArrow}}"
                                                         FalseSource="{DynamicResource {x:Static reskeys:ResourceKeys.NormalArrow}}"
                                                        />
            </ResourceDictionary>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" MinHeight="200"/>
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>

        <TextBlock Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="0"
                   Margin="12"
                   FontSize="20"
                   HorizontalAlignment="Left" VerticalAlignment="Top">
            <TextBlock Text="Welcome to the " />
            <TextBlock Text="{Binding DemoTitle}" FontWeight="Bold" />
            <TextBlock Text=" Breadcrumb Demo" />
        </TextBlock>

        <TextBlock Text="BreadCrumb" Grid.Column="0" Grid.Row="1" Margin="3,6"
                   HorizontalAlignment="Right" VerticalAlignment="Top" />
        <Grid Grid.Column="1" Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <Grid Grid.Column="0" Grid.Row="0"
                  xmlns:behav="clr-namespace:BreadcrumbTestLib.Behaviors"
                  >
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <ctrls:Breadcrumb Name="BreadcrumbDemoControl"
                                  DataContext="{Binding BreadcrumbController.BreadcrumbBrowser}"
                                  Visibility="{Binding Path=IsChecked,ElementName=ShowBreadCrumbControl,Mode=OneWay, UpdateSourceTrigger=PropertyChanged,Converter={StaticResource BoolToVisibilityConverter}}"
                                  VerticalAlignment="Top" HorizontalAlignment="Stretch"
                                  
                                  RootDropDownItemsSource="{Binding OverflowedAndRootItems}"
                                  RootDropDownSelectedValuePath="Selection.Value"
                                  
                                  TreeItemsSource="{Binding BreadcrumbSubTree.Entries.All, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"
                                  Margin="3"
                              >
                    <ctrls:Breadcrumb.TreeItemContainerStyle>
                        <Style TargetType="{x:Type treectrls:BreadcrumbTreeItem}" BasedOn="{StaticResource {x:Type treectrls:BreadcrumbTreeItem}}">
                            <Setter Property="ValuePath" Value="Selection.Value" />
                            <Setter Property="SelectedChild" Value="{Binding Selection.SelectedChild, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"  />

                            <Setter Property="IsExpanded" Value="{Binding Entries.IsExpanded, Mode=TwoWay}"  />
                            <Setter Property="IsCurrentSelected" Value="{Binding Selection.IsSelected, Mode=TwoWay}"  />

                            <Setter Property="IsChildSelected" Value="{Binding Selection.IsChildSelected, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"  />

                            <!--Updated by BreadcrumbTreeItem and it's OverflowableStackPanel-->
                            <Setter Property="IsOverflowed" Value="{Binding Selection.IsOverflowed, Mode=OneWayToSource}"  />
                            <Setter Property="ClickItemCommand" Value="{Binding BreadcrumbTreeTreeItemClickCommand}" />
                            <Setter Property="DropDownListItemDataTemplate" Value="{Binding ElementName=BreadcrumbDemoControl, Path=DropDownListItemDataTemplate}"/>
                        </Style>
                    </ctrls:Breadcrumb.TreeItemContainerStyle>
                    <ctrls:Breadcrumb.TreeItemTemplate>
                        <!-- Defines a DataTemplate to
                             display a path element within the HORIZONTAL Breadcrumb tree control -->
                        <HierarchicalDataTemplate ItemsSource="{Binding Entries.All}">
                            <TextBlock Text="{Binding Header}"
                                       VerticalAlignment="Center"
                                       Background="Transparent"
                                       Foreground="{DynamicResource {x:Static reskeys:ResourceKeys.ControlTextBrushKey}}"
                                       >
                                <TextBlock.ToolTip>
                                    <TextBlock Text="{Binding Header}"/>
                                </TextBlock.ToolTip>
                            </TextBlock>
                        </HierarchicalDataTemplate>
                    </ctrls:Breadcrumb.TreeItemTemplate>
                    <ctrls:Breadcrumb.DropDownListItemDataTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <Image Margin="3,0" HorizontalAlignment="Left" VerticalAlignment="Center">
                                    <Image.Source>
                                        <MultiBinding Converter="{x:Static convLib:AssociatedIconConverter.Default}">
                                            <MultiBinding.ConverterParameter>
                                                <imgSize:IconSize >Small</imgSize:IconSize>
                                            </MultiBinding.ConverterParameter>
                                            <Binding Path="ItemPath" />
                                            <Binding Path="ItemName" />
                                            <Binding Path="IconResourceId" />
                                        </MultiBinding>
                                    </Image.Source>
                                </Image>

                                <TextBlock Text="{Binding Header}"
                                           Foreground="{DynamicResource {x:Static reskeys:ResourceKeys.ControlTextBrushKey}}"
                                           VerticalAlignment="Center"
                                           Grid.Column="1" />
                            </Grid>
                        </DataTemplate>
                    </ctrls:Breadcrumb.DropDownListItemDataTemplate>
                    <ctrls:Breadcrumb.RootDropDownListHeader>
                        <Border x:Name="border"
                                Background="Transparent"
                                BorderBrush="Transparent"
                                BorderThickness="0"
                                VerticalAlignment="Stretch"
                                HorizontalAlignment="Center"
                                Margin="0"
                                Padding="3,0"
                                SnapsToDevicePixels="True"
                                MinWidth="15"
                            >
                            <Path Stroke="{DynamicResource {x:Static reskeys:ResourceKeys.ControlNormalForegroundBrushKey}}"
                                  StrokeThickness="1.2"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Stretch"
                                  IsHitTestVisible="True"
                                  Data="{Binding IsOverflown, ElementName=BreadcrumbDemoControl, Converter={StaticResource BoolToOneOfTwoBindingsConverter}}"
                            />
                        </Border>
                    </ctrls:Breadcrumb.RootDropDownListHeader>
                </ctrls:Breadcrumb>

                <Grid Grid.Row="1">
                    <TreeView DataContext="{Binding BreadcrumbController.BreadcrumbBrowser}" 
                              ItemsSource="{Binding BreadcrumbSubTree.Entries.All}"
                              Visibility="{Binding Path=IsChecked,ElementName=ShowTreeviewControl,Mode=OneWay, UpdateSourceTrigger=PropertyChanged,Converter={StaticResource BoolToVisibilityConverter}}"
                          >
                        <TreeView.ItemTemplate>
                            <HierarchicalDataTemplate ItemsSource="{Binding Entries.All}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>

                                    <Image Margin="3,0"
                                           SnapsToDevicePixels="true"
                                           RenderOptions.BitmapScalingMode="NearestNeighbor">
                                        <Image.Source>
                                            <MultiBinding Converter="{x:Static convLib:AssociatedIconConverter.Default}">
                                                <MultiBinding.ConverterParameter>
                                                    <imgSize:IconSize >Small</imgSize:IconSize>
                                                </MultiBinding.ConverterParameter>
                                                <Binding Path="ItemPath" />
                                                <Binding Path="ItemName" />
                                                <Binding Path="IconResourceId" />
                                            </MultiBinding>
                                        </Image.Source>
                                    </Image>
                                    <TextBlock Text="{Binding Header}"
                                               Foreground="{DynamicResource {x:Static themes:ResourceKeys.ControlTextBrushKey}}"
                                               VerticalAlignment="Center"
                                               Grid.Column="1" >
                                        <TextBlock.ToolTip>
                                            <TextBlock FontFamily="Courier New">
                                            <!-- Is true on the item that is at the far right of the breadcrumb path -->
                                            <TextBlock Text="              Selection.IsSelected: "><TextBlock Text="{Binding Selection.IsSelected}"/></TextBlock><LineBreak/>
                                            
                                            <!-- Is true for items loaded initially in OverflowedAndRootItems list -->
                                            <TextBlock Text="                  Selection.IsRoot: "><TextBlock Text="{Binding Selection.IsRoot}"/></TextBlock><LineBreak/>
                                            <TextBlock Text="Selection.IsRootAndIsChildSelected: "><TextBlock Text="{Binding Selection.IsRootAndIsChildSelected}"/></TextBlock><LineBreak/>
                                            
                                            <!-- Is true only for root elements with a selected child item in their path -->
                                            <TextBlock Text="         Selection.IsChildSelected: "><TextBlock Text="{Binding Selection.IsChildSelected}"/></TextBlock><LineBreak/>
                                            <TextBlock Text="            Selection.IsOverflowed: "><TextBlock Text="{Binding Selection.IsOverflowed}"/></TextBlock><LineBreak/>
                                            
                                            <!-- Is this used at all? -->
                                            <!-- Might be used to bind drop down list control IsOpen when it pops-open -->
                                            <TextBlock Text="                Entries.IsExpanded: "><TextBlock Text="{Binding Entries.IsExpanded}"/></TextBlock>
                                        </TextBlock>
                                    </TextBlock.ToolTip>
                                </TextBlock>
                            </Grid>
                        </HierarchicalDataTemplate>
                    </TreeView.ItemTemplate>
                    <TreeView.ItemContainerStyle>
                        <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource {x:Type TreeViewItem}}">
                            <Setter Property="behav:TreeViewItemBehaviour.IsBroughtIntoViewWhenSelected" Value="True" />
                            <Setter Property="IsExpanded" Value="{Binding Selection.IsChildSelected, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"  />
                            <Setter Property="IsSelected" Value="{Binding Selection.IsSelected, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"  />
                        </Style>
                    </TreeView.ItemContainerStyle>
                </TreeView>
                    <ListBox 
                        DataContext="{Binding BreadcrumbController.BreadcrumbBrowser}"
                        ItemsSource="{Binding OverflowedAndRootItems,Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                        Visibility="{Binding Path=IsChecked,ElementName=ShowRootItemsOverflowList,Mode=OneWay, UpdateSourceTrigger=PropertyChanged,Converter={StaticResource BoolToVisibilityConverter}}"
                        Margin="3"
                        ScrollViewer.CanContentScroll="True"
                        ScrollViewer.VerticalScrollBarVisibility="Visible"
                        >
                        <ListBox.Resources>
                            <convLib:BoolToVisibilityCollapsedConverter x:Key="btv" />
                        </ListBox.Resources>
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>

                                    <Image Margin="3,0"
                                           SnapsToDevicePixels="true"
                                           RenderOptions.BitmapScalingMode="NearestNeighbor">
                                        <Image.Source>
                                            <MultiBinding Converter="{x:Static convLib:AssociatedIconConverter.Default}">
                                                <MultiBinding.ConverterParameter>
                                                    <imgSize:IconSize >Small</imgSize:IconSize>
                                                </MultiBinding.ConverterParameter>
                                                <Binding Path="ItemPath" />
                                                <Binding Path="ItemName" />
                                                <Binding Path="IconResourceId" />
                                            </MultiBinding>
                                        </Image.Source>
                                    </Image>

                                    <TextBlock Text="{Binding Header}"
                                           Foreground="{DynamicResource {x:Static themes:ResourceKeys.ControlTextBrushKey}}"
                                           VerticalAlignment="Center"
                                           Grid.Column="1" >
                                        <TextBlock.ToolTip>
                                            <TextBlock FontFamily="Courier New">
                                            <!-- Is true on the item that is at the far right of the breadcrumb path -->
                                            <TextBlock Text="              Selection.IsSelected: "><TextBlock Text="{Binding Selection.IsSelected}"/></TextBlock><LineBreak/>
                                            
                                            <!-- Is true for items loaded initially in OverflowedAndRootItems list -->
                                            <TextBlock Text="                  Selection.IsRoot: "><TextBlock Text="{Binding Selection.IsRoot}"/></TextBlock><LineBreak/>
                                            <TextBlock Text="Selection.IsRootAndIsChildSelected: "><TextBlock Text="{Binding Selection.IsRootAndIsChildSelected}"/></TextBlock><LineBreak/>
                                            
                                            <!-- Is true only for root elements with a selected child item in their path -->
                                            <TextBlock Text="         Selection.IsChildSelected: "><TextBlock Text="{Binding Selection.IsChildSelected}"/></TextBlock><LineBreak/>
                                            <TextBlock Text="            Selection.IsOverflowed: "><TextBlock Text="{Binding Selection.IsOverflowed}"/></TextBlock><LineBreak/>
                                            
                                            <!-- Is this used at all? -->
                                            <!-- Might be used to bind drop down list control IsOpen when it pops-open -->
                                            <TextBlock Text="                Entries.IsExpanded: "><TextBlock Text="{Binding Entries.IsExpanded}"/></TextBlock>
                                        </TextBlock>
                                    </TextBlock.ToolTip>
                                </TextBlock>
                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource {x:Type ListBoxItem}}" >
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding}" Value="{x:Null}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                            <!-- Show Seperator only if items are overflown -->
                                            <Separator HorizontalAlignment="Stretch" IsEnabled="False" />
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                    </ListBox.ItemContainerStyle>
                </ListBox>
                </Grid>
            </Grid>

            <TextBox Grid.Column="0" Grid.Row="2" Grid.ColumnSpan="2"
                     DataContext="{Binding BreadcrumbController}"
                     Text="{Binding Path=BreadcrumbBrowser.BreadcrumbSelectedPath, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"
                     TextWrapping="WrapWithOverflow"
                     HorizontalScrollBarVisibility="Auto"
                     VerticalScrollBarVisibility="Auto"
                    />
        </Grid>

        <!-- PropertiesView of Breadcrumb control -->
        <ScrollViewer Grid.Column="2" Grid.Row="1">
            <StackPanel VerticalAlignment="Top" Margin="3" Width="200">
                <!-- For Debugging only -->
                <CheckBox Content="Show BreadCrumb Control" Name="ShowBreadCrumbControl"
                          IsChecked="True" />

                <CheckBox Content="EnableBreadcrumb"
                      DataContext="{Binding BreadcrumbController}"
                      IsChecked="{Binding BreadcrumbBrowser.EnableBreadcrumb}" />

                <CheckBox Content="IsOverflown" IsEnabled="False"
                      IsChecked="{Binding ElementName=BreadcrumbDemoControl,Path=IsOverflown}" />

                <Grid Background="#20000000"
>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <TextBlock Text="Selection:" VerticalAlignment="Top"/>

                    <StackPanel Grid.Column="1"
                                HorizontalAlignment="Stretch" VerticalAlignment="Top"
                                Orientation="Vertical">
                        <Image DataContext="{Binding Path=BreadcrumbController.BreadcrumbBrowser.SelectedViewModel}"
                               VerticalAlignment="Center" HorizontalAlignment="Center" Width="64"
                               SnapsToDevicePixels="True"
                               RenderOptions.BitmapScalingMode="NearestNeighbor">
                            <Image.Source>
                                <MultiBinding Converter="{x:Static convLib:AssociatedIconConverter.Default}">
                                    <MultiBinding.ConverterParameter>
                                        <imgSize:IconSize>Large</imgSize:IconSize>
                                    </MultiBinding.ConverterParameter>
                                    <Binding Path="ItemPath" />
                                    <Binding Path="ItemName" />
                                    <Binding Path="IconResourceId" />
                                </MultiBinding>
                            </Image.Source>
                        </Image>

                        <TextBlock DataContext="{Binding BreadcrumbController}"
                                   Text="{Binding Path=BreadcrumbBrowser.SelectedViewModel.Header}" />
                    </StackPanel>
                </Grid>
                <Grid Margin="3,9">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <TextBlock Text="MinWidth:"
                           ToolTip="Defines the Minimum size of the Breadcrumb control display"
                           VerticalAlignment="Top" HorizontalAlignment="Right"/>
                    <TextBlock Grid.Column="1"
                           Text="{Binding ElementName=BreadcrumbDemoControl,Path=MinWidth,Mode=OneWay,UpdateSourceTrigger=PropertyChanged,StringFormat=N2}"
                           VerticalAlignment="Top" HorizontalAlignment="Left"/>

                    <Slider Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="1"
                        Value="{Binding ElementName=BreadcrumbDemoControl,Path=MinWidth}"
                        Minimum="10"
                        Maximum="400"
                        HorizontalAlignment="Stretch"
                        />
                </Grid>

                <CheckBox Content="Show TreeView Debug Control" Name="ShowTreeviewControl"
                          IsChecked="False" />

                <CheckBox Content="Show Root Items (Overflowed) List Control" Name="ShowRootItemsOverflowList"
                          IsChecked="False" />
            </StackPanel>
        </ScrollViewer>
    </Grid>
</UserControl>
