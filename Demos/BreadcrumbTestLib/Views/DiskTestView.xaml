<UserControl
    x:Class="BreadcrumbTestLib.Views.DiskTestView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:local="clr-namespace:BreadcrumbTestLib.Views"

    xmlns:uc="clr-namespace:BmLib.Controls.Breadcrumbs;assembly=BmLib"
    xmlns:ctrls="clr-namespace:BmLib.Controls;assembly=BmLib"
    xmlns:themes="clr-namespace:BmLib.Themes;assembly=BmLib"
    xmlns:convLib="clr-namespace:BmLib.Converters;assembly=BmLib"

    mc:Ignorable="d" 
    d:DesignHeight="450" d:DesignWidth="800">
    <Grid>
        <Grid.Resources>
                <convLib:BoolToVisibilityCollapsedConverter x:Key="btvc" />
        </Grid.Resources>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <!-- Display a dropdown list at the left most button in the control -->
        <ctrls:DropDownList
                HorizontalAlignment="Left"
                ItemsSource="{Binding Selection.OverflowedAndRootItems}"
                SelectedValuePath="Selection.Value"
                SelectedValue="{Binding Selection.SelectedValue}"                               
                ItemTemplate="{Binding MenuItemTemplate, ElementName=btree}"
                >
            <ctrls:DropDownList.Header>
                <Path Stroke="{DynamicResource {x:Static themes:ResourceKeys.ControlNormalForegroundBrushKey}}"
                        StrokeThickness="1.2"
                        Data="{DynamicResource {x:Static themes:ResourceKeys.ExpanderArrow}}"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        IsHitTestVisible="True"                          
                      />
            </ctrls:DropDownList.Header>
            <!--ItemContainerStyle already assigned in DropDownList.xaml -->
            <ctrls:DropDownList.ItemContainerStyle>
                <Style TargetType="{x:Type ComboBoxItem}" BasedOn="{StaticResource {x:Type ComboBoxItem}}">
                    <Setter Property="Visibility" Value="{Binding Selection.IsOverflowedOrRoot, Mode=OneWay, Converter={StaticResource btvc}}"  />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding}" Value="{x:Null}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                                        <Separator HorizontalAlignment="Stretch" IsEnabled="False" />
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ctrls:DropDownList.ItemContainerStyle>
        </ctrls:DropDownList>

        <!-- The BreadcrumbTree control displays the complete path and each drop down list -->
        <uc:BreadcrumbTree Grid.Column="1" ItemsSource="{Binding Entries.All}" x:Name="btree">
            <uc:BreadcrumbTree.ItemContainerStyle>
                <Style TargetType="{x:Type uc:BreadcrumbTreeItem}" BasedOn="{StaticResource {x:Type uc:BreadcrumbTreeItem}}">
                    <Setter Property="ValuePath" Value="Selection.Value" />
                    <Setter Property="IsExpanded" Value="{Binding Entries.IsExpanded, Mode=TwoWay}"  />
                    <Setter Property="IsCurrentSelected" Value="{Binding Selection.IsSelected, Mode=TwoWay}"  />
                    <Setter Property="SelectedChild" Value="{Binding Selection.SelectedChildUI, Mode=TwoWay}"  />
                    <Setter Property="IsChildSelected" Value="{Binding Selection.IsChildSelected, Mode=OneWay}"  />

                    <!--Updated by BreadcrumbTreeItem and it's OverflowableStackPanel-->
                    <Setter Property="IsOverflowed" Value="{Binding Selection.IsOverflowed, Mode=OneWayToSource}"  />
                </Style>
            </uc:BreadcrumbTree.ItemContainerStyle>

            <!-- Each element in the vertical drop down list has an icon and a textual name -->
            <uc:BreadcrumbTree.MenuItemTemplate>
                <DataTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <Image Source="{Binding Icon}" Margin="3,0" HorizontalAlignment="Left" VerticalAlignment="Center" />
                        <TextBlock Text="{Binding Header}"
                                 Foreground="{DynamicResource {x:Static themes:ResourceKeys.ControlTextBrushKey}}"
                                 VerticalAlignment="Center"
                                 Grid.Column="1" />
                    </Grid>
                </DataTemplate>
            </uc:BreadcrumbTree.MenuItemTemplate >

            <uc:BreadcrumbTree.ItemTemplate>
                <!-- Display of path elements within the HORIZONTAL Breadcrumb tree control
                       eg "C:\" |> "Program Files" "|>" 
                  -->
                <HierarchicalDataTemplate ItemsSource="{Binding Entries.All}">
                    <Border Background="{DynamicResource {x:Static themes:ResourceKeys.ControlNormalBackgroundKey}}" BorderThickness="0">
                        <TextBlock Text="{Binding Header}"
                                 VerticalAlignment="Center"
                                 Foreground="{DynamicResource {x:Static themes:ResourceKeys.ControlTextBrushKey}}"
                                 />
                    </Border>
                </HierarchicalDataTemplate>
            </uc:BreadcrumbTree.ItemTemplate>

            <!--<uc:BreadcrumbTree.LayoutTransform>
                        <ScaleTransform ScaleX="2" ScaleY="2" />
                    </uc:BreadcrumbTree.LayoutTransform>-->
        </uc:BreadcrumbTree>
    </Grid>
</UserControl>
