<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    
                    xmlns:options="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
                    xmlns:reskeys="clr-namespace:BmLib.Themes;assembly=BmLib"
                    xmlns:MLib_reskeys="clr-namespace:MLib.Themes;assembly=MLib">

    <SolidColorBrush x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type reskeys:ResourceKeys},
                     ResourceId=ControlAccentBrushKey}"
                     options:Freeze="true"
                     Color="{DynamicResource {x:Static MLib_reskeys:ResourceKeys.ControlAccentColorKey}}" />

    <SolidColorBrush x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type reskeys:ResourceKeys},
                     ResourceId=ArrowFillMouseOverForeground}"
                     options:Freeze="true"
                     Color="{DynamicResource {x:Static MLib_reskeys:ResourceKeys.ControlAccentColorKey}}" />

    <SolidColorBrush x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type reskeys:ResourceKeys},
                     ResourceId=ArrowBorderMouseOverForeground}"
                     options:Freeze="true"
                     Color="{DynamicResource {x:Static MLib_reskeys:ResourceKeys.ControlAccentColorKey}}" />

    <!-- Defines the inner color of the chevron symbol in the arrow drop down button -->
    <SolidColorBrush x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type reskeys:ResourceKeys},
                     ResourceId=ArrowFillCheckedForeground}"
                     options:Freeze="true"
                     Color="{DynamicResource {x:Static MLib_reskeys:ResourceKeys.ControlAccentColorKey}}" />

    <!-- Defines the outer (border) color of the chevron symbol in the arrow drop down button -->
    <SolidColorBrush x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type reskeys:ResourceKeys},
                     ResourceId=ArrowBorderCheckedForeground}"
                     options:Freeze="true"
                     Color="{DynamicResource {x:Static MLib_reskeys:ResourceKeys.ControlAccentColorKey}}" />

    <!-- Is applied on root drop button when list is open -->
    <SolidColorBrush x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type reskeys:ResourceKeys},
                     ResourceId=HotTrack_SelectedBrush}"
                     options:Freeze="true"
                     Color="{DynamicResource {x:Static MLib_reskeys:ResourceKeys.ControlAccentColorKey}}"
                     Opacity=".5"
                     />

    <SolidColorBrush x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type reskeys:ResourceKeys},
                     ResourceId=HotTrack_HighlightBrush}"
                     Color="{DynamicResource {x:Static MLib_reskeys:ResourceKeys.ControlAccentColorKey}}"
                     options:Freeze="true"
                     Opacity=".25"
                     />

    <!-- This color is applied to the drop down button (Hottrack) when it is selected and the drop down is open -->
    <SolidColorBrush x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type reskeys:ResourceKeys},
                     ResourceId=OpenDropDownButton_Background}"
                     options:Freeze="true"
                     Color="{DynamicResource {x:Static MLib_reskeys:ResourceKeys.ControlAccentColorKey}}" />

    <!-- Setting ProgressBar foreground color
         Not really needed here since ProgressBar style is overwritten below
         but its redefined just in case ... -->
    <SolidColorBrush x:Key="{x:Static reskeys:ResourceKeys.HotTrackBrushKey}"
                     Color="{DynamicResource {x:Static MLib_reskeys:ResourceKeys.ControlAccentColorKey}}"/>

    <!-- Setting ProgressBar style to use a standard progressbar display instead of the
         infinite metro progress display ... -->
    <Style x:Key="{x:Static reskeys:ResourceKeys.BreadcrumbProgressBarStyleKey}"
           BasedOn="{StaticResource {x:Static MLib_reskeys:ResourceKeys.ProgressStyleKey }}"
           TargetType="ProgressBar"/>

</ResourceDictionary>