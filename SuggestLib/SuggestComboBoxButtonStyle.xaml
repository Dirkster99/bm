<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    
                    xmlns:reskeys="clr-namespace:SuggestLib.Themes"
                    xmlns:local="clr-namespace:SuggestLib">


    <!-- Define an arrow geometry that can be used for Forward, Backward and Up Buttons -->
    <Geometry x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type reskeys:ResourceKeys},
                     ResourceId=ArrowGeometryKey}">F1 M 724.371,610.402C 724.402,610.356 724.431,610.312 724.459,610.263C 724.488,610.211 724.511,610.159 724.595,609.975C 724.619,609.919 724.634,609.862 724.652,609.803C 724.666,609.756 724.68,609.71 724.691,609.662C 724.704,609.606 724.712,609.548 724.72,609.492C 724.728,609.443 724.732,609.395 724.738,609.347C 724.743,609.288 724.743,609.23 724.74,609.171C 724.74,609.124 724.743,609.078 724.738,609.031C 724.735,608.97 724.726,608.91 724.718,608.85C 724.71,608.804 724.704,608.76 724.694,608.714C 724.68,608.655 724.663,608.596 724.644,608.539C 724.631,608.492 724.619,608.448 724.53,608.24C 724.507,608.196 724.486,608.152 724.462,608.108C 724.434,608.056 724.399,608.006 724.286,607.842C 724.246,607.792 724.204,607.746 724.103,607.632L 713.832,597.36C 712.972,596.502 711.584,596.502 710.728,597.36C 709.871,598.215 709.871,599.606 710.728,600.462L 717.256,606.988L 696.934,606.988C 696.176,606.988 695.507,607.372 695.114,607.956C 694.876,608.307 694.738,608.728 694.738,609.184C 694.738,609.79 694.983,610.338 695.382,610.735C 695.778,611.134 696.327,611.378 696.934,611.378L 717.256,611.378L 710.728,617.904C 709.871,618.762 709.871,620.151 710.728,621.007C 711.158,621.436 711.718,621.652 712.28,621.652C 712.843,621.652 713.402,621.438 713.832,621.01L 724.166,610.666C 724.204,610.622 724.246,610.576 724.283,610.528C 724.314,610.487 724.343,610.444 724.371,610.402 Z</Geometry>

    <Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type reskeys:ResourceKeys},
                                ResourceId=HistoryButtonStyleKey}" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ControlNormalForegroundBrushKey}}" />
        <Setter Property="Background" Value="Transparent" />
        <!--Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" /-->
        <!-- Setter Property="Margin" Value="3,0,3,3" / -->
        <!-- Setter Property="Padding" Value="6,3" / -->
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Focusable" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter x:Name="contentPresenter"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                        Margin="{TemplateBinding Padding}"
                                        RecognizesAccessKey="True" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ControlMouseOverBackgroundBrushKey}}" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ControlAccentBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ControlAccentBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="contentPresenter" Property="Opacity" Value=".5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type reskeys:ResourceKeys},
           ResourceId=HistoryToggleButtonStyleKey}"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ControlNormalForegroundBrushKey}}" />
        <Setter Property="Background" Value="Transparent" />
        <!--Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" /-->
        <!-- Setter Property="Margin" Value="3,0,3,3" / -->
        <!-- Setter Property="Padding" Value="6,3" / -->
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Focusable" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter x:Name="contentPresenter"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                        Margin="{TemplateBinding Padding}"
                                        RecognizesAccessKey="True" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ControlMouseOverBackgroundBrushKey}}" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ControlAccentBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ControlAccentBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ControlAccentBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="contentPresenter" Property="Opacity" Value=".5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>